# !/usr/bin/env python3
# -*- coding:utf-8 -*-
# @Time    : 2024/4/15 11:14
# @Author  : wangchongshi
# @Email   : wangchongshi.wcs@antgroup.com
# @FileName: test_reviewing_agent.py
import unittest

from agentuniverse.agent.agent import Agent
from agentuniverse.agent.agent_manager import AgentManager
from agentuniverse.agent.input_object import InputObject
from agentuniverse.agent.output_object import OutputObject
from agentuniverse.base.agentuniverse import AgentUniverse


class ReviewingAgentTest(unittest.TestCase):
    """Test cases for the reviewing agent"""

    def setUp(self) -> None:
        AgentUniverse().start(config_path='../../config/config.toml')

    def test_reviewing_agent(self):
        """Test demo reviewing agent.

        In the normal process, we need to aggregate information through the expressing agent to generate a complete answer.
        After that, the reviewing agent is used to evaluate whether the question answered by the expressing agent is valid.
        In the current demo test method, we mock the expressing result generated by the expressing Agent.
        """

        instance: Agent = AgentManager().get_instance_obj('demo_reviewing_agent')

        # mock the expressing agent result
        expressing_output = """
        分析巴菲特减持比亚迪的原因，我们可以从以下几个角度进行解读：
        首先，从投资策略的角度来看，巴菲特一直以来的投资原则是“买入并持有”，而非频繁交易。他的投资决策通常基于对公司运营状况的长期观察和判断。因此，巴菲特减持比亚迪可能是他对比亚迪的未来发展或者新能源行业的前景有了新的认识。这可能是由于比亚迪的业务表现、市场竞争环境、政策风险等因素的变化，使得巴菲特对比亚迪的价值预期发生了调整。
        其次，从资本运作的角度来看，巴菲特减持比亚迪也可能是出于资本运作的需要。巴菲特的伯克希尔·哈撒韦公司是一个多元化的投资集团，需要对各个投资项目进行合理的资金配置。因此，巴菲特可能是在进行资产配置的调整，以适应市场环境的变化，或者获取更高的投资回报。
        再次，从市场环境的角度来看，近年来，新能源汽车行业的竞争日益激烈，各大汽车厂商纷纷投入新能源汽车的研发和生产。在这种情况下，巴菲特可能认为比亚迪在未来的市场竞争中面临的压力和挑战增大，因此选择了减持。
        总的来说，巴菲特减持比亚迪的原因可能是多方面的，包括他对比亚迪及新能源行业未来发展的认识变化，资本运作的需要，以及市场环境的变化等。这些因素的综合作用可能导致了巴菲特对比亚迪的投资策略进行了调整。
        """
        expressing_result = InputObject({'output': expressing_output})

        output_object: OutputObject = instance.run(input='分析下巴菲特减持比亚迪的原因',
                                                   expressing_result=expressing_result)
        res_info = f"\nReviewing agent execution result is :\n"
        res_info += f"review suggestion: {output_object.get_data('suggestion')} \n"
        res_info += f"review score: {output_object.get_data('score')} \n"
        print(res_info)


if __name__ == '__main__':
    unittest.main()
